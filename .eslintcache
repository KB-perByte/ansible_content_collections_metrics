[{"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js":"1","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js":"2","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js":"3","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js":"4","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACPullRequests.js":"5","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Collections.js":"6","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js":"7","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRTable.js":"8","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js":"9","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/CollectionInsights.js":"10","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js":"11","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRColumns.js":"12","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js":"13"},{"size":618,"mtime":1611502218054,"results":"14","hashOfConfig":"15"},{"size":447,"mtime":1611502303335,"results":"16","hashOfConfig":"15"},{"size":852,"mtime":1611508194014,"results":"17","hashOfConfig":"15"},{"size":363,"mtime":1611254299816,"results":"18","hashOfConfig":"15"},{"size":859,"mtime":1611508199179,"results":"19","hashOfConfig":"15"},{"size":1584,"mtime":1611504909151,"results":"20","hashOfConfig":"15"},{"size":3546,"mtime":1611507508584,"results":"21","hashOfConfig":"15"},{"size":3519,"mtime":1611507737684,"results":"22","hashOfConfig":"15"},{"size":1644,"mtime":1611514533059,"results":"23","hashOfConfig":"15"},{"size":1059,"mtime":1611507286276,"results":"24","hashOfConfig":"15"},{"size":2856,"mtime":1611513193780,"results":"25","hashOfConfig":"15"},{"size":1390,"mtime":1611503002164,"results":"26","hashOfConfig":"15"},{"size":1432,"mtime":1611502959310,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"3u8gy2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js",[],["63","64"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js",["65","66"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Collections from \"./components/Collections\";\nimport { Container } from \"reactstrap\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Container>\n          <Collections />\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js",["67","68"],"import { useQuery } from \"@apollo/client\";\nimport { ISSUES } from \"../queries/queries\";\nimport IssueTable from \"./IssueTable\";\nimport { useState } from \"react\";\n\nconst ACIssues = ({ repository }) => {\n  // const [repository, setRepository] = useState(\"cisco.nxos\");\n\n  const { loading, error, data, refetch } = useQuery(ISSUES, {\n    variables: { repositoryName: repository },\n  });\n  // console.log(data);\n\n  const name = data ? data.repository.name : null;\n  const count = data ? data.repository.issues.edges.length : 0;\n\n  return (\n    <div className=\"ac-issues\">\n      <h2>Repository: {name}</h2>\n      <h3>Total Issues: {count >= 100 ? \"100+\" : count}</h3>\n      {error && <div>{error}</div>}\n      {loading && <div>Loading...</div>}\n      {data && <IssueTable issues={data.repository.issues.edges} />}\n    </div>\n  );\n};\nexport default ACIssues;\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACPullRequests.js",["69","70"],"import { useQuery } from \"@apollo/client\";\nimport { PR } from \"../queries/queries\";\nimport PRTable from \"./PRTable\";\nimport { useState } from \"react\";\n\nconst ACPullRequests = ({ repository }) => {\n  // const [repository, setRepository] = useState(\"cisco.nxos\");\n\n  const { loading, error, data, refetch } = useQuery(PR, {\n    variables: { repositoryName: repository },\n  });\n  // console.log(data);\n\n  const name = data ? data.repository.name : null;\n  const count = data ? data.repository.pullRequests.edges.length : 0;\n\n  return (\n    <div className=\"ac-pull-requests\">\n      <h2>Repository: {name}</h2>\n      <h3>Total PRs: {count >= 100 ? \"100+\" : count}</h3>\n      {error && <div>{error}</div>}\n      {loading && <div>Loading...</div>}\n      {data && <PRTable pr={data.repository.pullRequests.edges} />}\n    </div>\n  );\n};\nexport default ACPullRequests;\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Collections.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js",["71","72","73","74","75"],"import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\nimport { useTable, useFilters, useSortBy, usePagination } from \"react-table\";\nimport { COLUMNS } from \"./IssueColumns\";\nimport { Filter, DefaultColumnFilter } from \"./filters\";\nimport { Button } from \"bootstrap\";\n\nconst IssueTable = ({ issues }) => {\n  // const columns = useMemo(() => COLUMNS, []);\n  // const data = useMemo(() => issues, []);\n\n  const columns = COLUMNS;\n  const data = issues;\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: { Filter: DefaultColumnFilter },\n    },\n    useFilters,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    prepareRow,\n  } = tableInstance;\n\n  const { pageIndex, pageSize } = state;\n\n  const generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? \" ⬇\" : \" ⬆\") : \" ⬍\";\n  };\n\n  return (\n    <div className=\"issue-list\">\n      <Table bordered hover className=\"issue-table\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>{generateSortingIndicator(column)}</span>\n                  <Filter column={column} />\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div>\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <span>\n          | Go to page:{\" \"}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{ width: \"50px\" }}\n          ></input>\n        </span>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n        >\n          {[10, 25, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {\"<<\"}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          Previous\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          Next\n        </button>\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {\">>\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IssueTable;\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRTable.js",["76","77","78","79","80"],"import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"reactstrap\";\nimport { useTable, useFilters, useSortBy, usePagination } from \"react-table\";\nimport { COLUMNS } from \"./PRColumns\";\nimport { Filter, DefaultColumnFilter } from \"./filters\";\nimport { Button } from \"bootstrap\";\n\nconst PRTable = ({ pr }) => {\n  // const columns = useMemo(() => COLUMNS, []);\n  // const data = useMemo(() => pr, []);\n\n  const columns = COLUMNS;\n  const data = pr;\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: { Filter: DefaultColumnFilter },\n    },\n    useFilters,\n    useSortBy,\n    usePagination\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    state,\n    prepareRow,\n  } = tableInstance;\n\n  const { pageIndex, pageSize } = state;\n\n  const generateSortingIndicator = (column) => {\n    return column.isSorted ? (column.isSortedDesc ? \" ⬇\" : \" ⬆\") : \" ⬍\";\n  };\n\n  return (\n    <div className=\"pr-list\">\n      <Table bordered hover className=\"pr-table\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>{generateSortingIndicator(column)}</span>\n                  <Filter column={column} />\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div>\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <span>\n          | Go to page:{\" \"}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const pageNumber = e.target.value\n                ? Number(e.target.value) - 1\n                : 0;\n              gotoPage(pageNumber);\n            }}\n            style={{ width: \"50px\" }}\n          ></input>\n        </span>\n        <select\n          value={pageSize}\n          onChange={(e) => setPageSize(Number(e.target.value))}\n        >\n          {[10, 25, 50].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {\"<<\"}\n        </button>\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          Previous\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          Next\n        </button>\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {\">>\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PRTable;\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/CollectionInsights.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js",["81"],"import React, { useEffect } from \"react\";\nimport { Input, CustomInput } from \"reactstrap\";\nimport * as moment from \"moment\";\n\nexport const Filter = ({ column }) => {\n  return (\n    <div style={{ marginTop: 5 }}>\n      {column.canFilter && column.render(\"Filter\")}\n    </div>\n  );\n};\n\nexport const DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows: { length },\n  },\n}) => {\n  return (\n    <Input\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n      placeholder={`search (${length}) ...`}\n    />\n  );\n};\n\nexport const SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) => {\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  return (\n    <CustomInput\n      id=\"custom-select\"\n      type=\"select\"\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  );\n};\n\nexport const DateFilter = (props) => {\n  const {\n    column: { setFilter, preFilteredRows },\n  } = props;\n\n  useEffect(() => {\n    setFilter(filterByDate());\n  }, []);\n\n  const returnRows = (requiredDate) => {\n    const todaysDate = moment();\n    const requiredData = preFilteredRows.filter((row) => {\n      return (\n        moment(row.values[\"node.createdAt\"]).isAfter(requiredDate) &&\n        moment(row.values[\"node.createdAt\"]).isBefore(todaysDate)\n      );\n    });\n    return requiredData;\n  };\n\n  const filterByDate = (value = \"1M\") => {\n    let requiredDate;\n    switch (value) {\n      case \"1M\":\n        requiredDate = moment().subtract(1, \"month\");\n        return returnRows(requiredDate);\n      case \"3M\":\n        requiredDate = moment().subtract(3, \"months\");\n        return returnRows(requiredDate);\n      case \"L3M\":\n        requiredDate = moment().subtract(3, \"months\");\n        const requiredData = preFilteredRows.filter((row) => {\n          return moment(row.values[\"node.createdAt\"]).isBefore(requiredDate);\n        });\n        return requiredData;\n      default:\n        requiredDate = moment().subtract(1, \"week\");\n        return returnRows(requiredDate);\n    }\n  };\n  return (\n    <Input\n      type=\"select\"\n      onChange={(e) => {\n        setFilter(filterByDate(e.target.value));\n      }}\n    >\n      <option value=\"1W\">Past week</option>\n      <option value=\"1M\" selected>\n        Past month\n      </option>\n      <option value=\"3M\">Past 3 months</option>\n      <option value=\"L3M\">&lt; 3 months</option>\n    </Input>\n  );\n};\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRColumns.js",["82","83"],"import { format } from \"date-fns\";\nimport { DateFilter, SelectColumnFilter } from \"./filters\";\nimport moment from \"moment\";\n\nexport const COLUMNS = [\n  {\n    Header: \"Created At\",\n    Footer: \"Created At\",\n    accessor: \"node.createdAt\",\n    Cell: ({ value }) => {\n      return moment(new Date(value)).format(\"ll\");\n    },\n    disableSortBy: true,\n    Filter: DateFilter,\n    filter: (rows, columnId, filterValues) => {\n      return filterValues;\n    },\n  },\n  // {\n  //     id: 'node.closed',\n  //     Header: 'Status',\n  //     Footer: 'Status',\n  //     accessor: d => { return d.node.closed ? \"Closed\" : \"Open\" },\n  //     Filter: SelectColumnFilter,\n  //     filter: 'equals'\n  // },\n  {\n    Header: \"Status\",\n    Footer: \"Status\",\n    accessor: \"node.state\",\n    Filter: SelectColumnFilter,\n    filter: \"equals\",\n    disableSortBy: true,\n  },\n  {\n    Header: \"Title\",\n    Footer: \"Title\",\n    accessor: \"node.title\",\n    Cell: ({ cell: { value }, row: { original } }) => (\n      <a href={original.node.url} target=\"_blank\">\n        {value}\n      </a>\n    ),\n  },\n  {\n    Header: \"Updated At\",\n    Footer: \"Updated At\",\n    accessor: \"node.updatedAt\",\n    Cell: ({ value }) => {\n      return moment(new Date(value)).format(\"ll\");\n    },\n    disableFilters: true,\n  },\n  {\n    Header: \"Author\",\n    Footer: \"Author\",\n    accessor: \"node.author.login\",\n    disableFilters: true,\n  },\n];\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js",["84","85","86"],"import { format } from \"date-fns\";\nimport { CustomInput } from \"reactstrap\";\nimport { DateFilter, SelectColumnFilter } from \"./filters\";\nimport moment from \"moment\";\n\nexport const COLUMNS = [\n  {\n    Header: \"Created At\",\n    Footer: \"Created At\",\n    accessor: \"node.createdAt\",\n    Cell: ({ value }) => {\n      return moment(new Date(value)).format(\"ll\");\n    },\n    disableSortBy: true,\n    Filter: DateFilter,\n    filter: (rows, columnId, filterValues) => {\n      return filterValues;\n    },\n  },\n  // {\n  //     id: 'node.closed',\n  //     Header: 'Status',\n  //     Footer: 'Status',\n  //     accessor: d => { return d.node.closed ? \"Closed\" : \"Open\" },\n  //     Filter: SelectColumnFilter,\n  //     filter: 'equals'\n  // },\n  {\n    Header: \"Status\",\n    Footer: \"Status\",\n    accessor: \"node.state\",\n    Filter: SelectColumnFilter,\n    filter: \"equals\",\n    disableSortBy: true,\n  },\n  {\n    Header: \"Title\",\n    Footer: \"Title\",\n    accessor: \"node.title\",\n    Cell: ({ cell: { value }, row: { original } }) => (\n      <a href={original.node.url} target=\"_blank\">\n        {value}\n      </a>\n    ),\n  },\n  {\n    Header: \"Updated At\",\n    Footer: \"Updated At\",\n    accessor: \"node.updatedAt\",\n    Cell: ({ value }) => {\n      return moment(new Date(value)).format(\"ll\");\n    },\n    disableFilters: true,\n  },\n  {\n    Header: \"Author\",\n    Footer: \"Author\",\n    accessor: \"node.author.login\",\n    disableFilters: true,\n  },\n];\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":35,"nodeType":"93","messageId":"94","endLine":2,"endColumn":40},{"ruleId":"91","severity":1,"message":"95","line":2,"column":42,"nodeType":"93","messageId":"94","endLine":2,"endColumn":48},{"ruleId":"91","severity":1,"message":"96","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"97","line":9,"column":33,"nodeType":"93","messageId":"94","endLine":9,"endColumn":40},{"ruleId":"91","severity":1,"message":"96","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"91","severity":1,"message":"97","line":9,"column":33,"nodeType":"93","messageId":"94","endLine":9,"endColumn":40},{"ruleId":"91","severity":1,"message":"96","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":1,"column":20,"nodeType":"93","messageId":"94","endLine":1,"endColumn":27},{"ruleId":"91","severity":1,"message":"99","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":31,"column":5,"nodeType":"93","messageId":"94","endLine":31,"endColumn":9},{"ruleId":"91","severity":1,"message":"96","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":1,"column":20,"nodeType":"93","messageId":"94","endLine":1,"endColumn":27},{"ruleId":"91","severity":1,"message":"99","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":31,"column":5,"nodeType":"93","messageId":"94","endLine":31,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":68,"column":6,"nodeType":"104","endLine":68,"endColumn":8,"suggestions":"105"},{"ruleId":"91","severity":1,"message":"106","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":40,"column":7,"nodeType":"109","endLine":40,"endColumn":51},{"ruleId":"91","severity":1,"message":"106","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":16},{"ruleId":"91","severity":1,"message":"110","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":41,"column":7,"nodeType":"109","endLine":41,"endColumn":51},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useState' is defined but never used.","'refetch' is assigned a value but never used.","'useMemo' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'rows' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterByDate' and 'setFilter'. Either include them or remove the dependency array.","ArrayExpression",["113"],"'format' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'CustomInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [filterByDate, setFilter]",{"range":"116","text":"117"},[1469,1471],"[filterByDate, setFilter]"]