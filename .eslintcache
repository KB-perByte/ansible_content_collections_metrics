[{"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js":"1","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js":"2","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js":"3","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js":"4","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACPullRequests.js":"5","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Collections.js":"6","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js":"7","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRTable.js":"8","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js":"9","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/CollectionInsights.js":"10","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js":"11","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRColumns.js":"12","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js":"13"},{"size":618,"mtime":1611502218054,"results":"14","hashOfConfig":"15"},{"size":447,"mtime":1611502303335,"results":"16","hashOfConfig":"15"},{"size":769,"mtime":1611502258049,"results":"17","hashOfConfig":"15"},{"size":363,"mtime":1611254299816,"results":"18","hashOfConfig":"15"},{"size":779,"mtime":1611502286520,"results":"19","hashOfConfig":"15"},{"size":1552,"mtime":1611502344868,"results":"20","hashOfConfig":"15"},{"size":5225,"mtime":1611383809598,"results":"21","hashOfConfig":"15"},{"size":5205,"mtime":1611385200262,"results":"22","hashOfConfig":"15"},{"size":2064,"mtime":1611501968957,"results":"23","hashOfConfig":"15"},{"size":1059,"mtime":1611500847565,"results":"24","hashOfConfig":"15"},{"size":2848,"mtime":1611502582716,"results":"25","hashOfConfig":"15"},{"size":1390,"mtime":1611503002164,"results":"26","hashOfConfig":"15"},{"size":1432,"mtime":1611502959310,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3u8gy2",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js",["57","58"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js",["59","60"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js",[],["61","62"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACPullRequests.js",["63","64"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Collections.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js",["65","66","67","68","69"],"import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from 'reactstrap';\nimport { useTable, useFilters, useSortBy, usePagination } from 'react-table';\nimport { COLUMNS } from './IssueColumns';\nimport { Filter, DefaultColumnFilter } from './filters';\nimport { Button } from \"bootstrap\";\n\n\nconst IssueTable = ({ name, issues, count }) => {\n\n    // const columns = useMemo(() => COLUMNS, []);\n    // const data = useMemo(() => issues, []);\n\n    const columns = COLUMNS;\n    const data = issues;\n\n    const tableInstance = useTable({\n        columns,\n        data,\n        defaultColumn: { Filter: DefaultColumnFilter },\n        },\n        useFilters,\n        useSortBy,\n        usePagination);\n\n    const { \n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        page,\n        nextPage,\n        previousPage,\n        canNextPage,\n        canPreviousPage,\n        pageOptions,\n        gotoPage,\n        pageCount,\n        setPageSize,\n        state,\n        prepareRow\n    } = tableInstance;\n\n    const { pageIndex, pageSize } = state;\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? ' ⬇' : ' ⬆') : ' ⬍';\n    };\n\n    return (\n        <div className=\"issue-list\">\n            <h2>Repository: { name }</h2>\n            <h2>Issues: { count }</h2>\n\n            <Table bordered hover className=\"issue-table\" { ...getTableProps() }>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr { ...headerGroup.getHeaderGroupProps() }>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th { ...column.getHeaderProps(column.getSortByToggleProps()) }>\n                                            {\n                                                column.render('Header')\n                                            }\n                                            <span>\n                                                { generateSortingIndicator(column) }\n                                            </span>\n                                            <Filter column={column} />\n                                        </th>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </thead>\n                <tbody { ...getTableBodyProps() }>\n                    {\n                        page.map((row) => {\n                            prepareRow(row)\n                            return (\n                                <tr { ...row.getRowProps() }>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return (\n                                                <td { ...cell.getCellProps() }>\n                                                    {\n                                                        cell.render('Cell')\n                                                    }\n                                                </td>\n                                            )\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n            <div>\n                <span>\n                    Page{ ' ' }\n                    <strong>\n                        { pageIndex + 1 } of { pageOptions.length }\n                    </strong>\n                    { ' ' }\n                </span>\n                <span>\n                    | Go to page: { ' ' }\n                    <input type=\"number\" defaultValue={ pageIndex + 1 }\n                        onChange={ (e) => {\n                            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(pageNumber)\n                        } }\n                        style={ { width: '50px' } }>\n                    </input>\n                </span>\n                <select value={ pageSize } onChange={ (e) => setPageSize(Number(e.target.value)) }>\n                    {\n                        [10, 25, 50].map((pageSize) => (\n                            <option key={ pageSize } value={ pageSize }>\n                                Show { pageSize }\n                            </option>\n                        ))\n                    }\n                </select>\n                <button onClick={ () => gotoPage(0) } disabled={ !canPreviousPage }>\n                    { '<<' }\n                </button>\n                <button onClick={ () => previousPage() } disabled={ !canPreviousPage }>Previous</button>\n                <button onClick={ () => nextPage() } disabled={ !canNextPage }>Next</button>\n                <button onClick={ () => gotoPage(pageCount - 1) } disabled={ !canNextPage }>\n                    { '>>' }\n                </button>\n            </div>\n        </div>\n    )\n}\n \nexport default IssueTable;","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRTable.js",["70","71","72","73","74"],"import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from 'reactstrap';\nimport { useTable, useFilters, useSortBy, usePagination } from 'react-table';\nimport { COLUMNS } from './PRColumns';\nimport { Filter, DefaultColumnFilter } from './filters';\nimport { Button } from \"bootstrap\";\n\n\nconst PRTable = ({ name, pr, count }) => {\n\n    // const columns = useMemo(() => COLUMNS, []);\n    // const data = useMemo(() => pr, []);\n\n    const columns = COLUMNS;\n    const data = pr;\n\n    const tableInstance = useTable({\n        columns,\n        data,\n        defaultColumn: { Filter: DefaultColumnFilter },\n        },\n        useFilters,\n        useSortBy,\n        usePagination);\n\n    const { \n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        page,\n        nextPage,\n        previousPage,\n        canNextPage,\n        canPreviousPage,\n        pageOptions,\n        gotoPage,\n        pageCount,\n        setPageSize,\n        state,\n        prepareRow\n    } = tableInstance;\n\n    const { pageIndex, pageSize } = state;\n\n    const generateSortingIndicator = (column) => {\n        return column.isSorted ? (column.isSortedDesc ? ' ⬇' : ' ⬆') : ' ⬍';\n    };\n\n    return (\n        <div className=\"pr-list\">\n            <h2>Repository: { name }</h2>\n            <h2>Pull Requests: { count }</h2>\n\n            <Table bordered hover className=\"pr-table\" { ...getTableProps() }>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr { ...headerGroup.getHeaderGroupProps() }>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th { ...column.getHeaderProps(column.getSortByToggleProps()) }>\n                                            {\n                                                column.render('Header')\n                                            }\n                                            <span>\n                                                { generateSortingIndicator(column) }\n                                            </span>\n                                            <Filter column={column} />\n                                        </th>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </thead>\n                <tbody { ...getTableBodyProps() }>\n                    {\n                        page.map((row) => {\n                            prepareRow(row)\n                            return (\n                                <tr { ...row.getRowProps() }>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return (\n                                                <td { ...cell.getCellProps() }>\n                                                    {\n                                                        cell.render('Cell')\n                                                    }\n                                                </td>\n                                            )\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n            <div>\n                <span>\n                    Page{ ' ' }\n                    <strong>\n                        { pageIndex + 1 } of { pageOptions.length }\n                    </strong>\n                    { ' ' }\n                </span>\n                <span>\n                    | Go to page: { ' ' }\n                    <input type=\"number\" defaultValue={ pageIndex + 1 }\n                        onChange={ (e) => {\n                            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\n                            gotoPage(pageNumber)\n                        } }\n                        style={ { width: '50px' } }>\n                    </input>\n                </span>\n                <select value={ pageSize } onChange={ (e) => setPageSize(Number(e.target.value)) }>\n                    {\n                        [10, 25, 50].map((pageSize) => (\n                            <option key={ pageSize } value={ pageSize }>\n                                Show { pageSize }\n                            </option>\n                        ))\n                    }\n                </select>\n                <button onClick={ () => gotoPage(0) } disabled={ !canPreviousPage }>\n                    { '<<' }\n                </button>\n                <button onClick={ () => previousPage() } disabled={ !canPreviousPage }>Previous</button>\n                <button onClick={ () => nextPage() } disabled={ !canNextPage }>Next</button>\n                <button onClick={ () => gotoPage(pageCount - 1) } disabled={ !canNextPage }>\n                    { '>>' }\n                </button>\n            </div>\n        </div>\n    )\n}\n \nexport default PRTable;","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js",["75"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/CollectionInsights.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js",["76"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRColumns.js",["77","78"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js",["79","80","81"],{"ruleId":"82","severity":1,"message":"83","line":2,"column":35,"nodeType":"84","messageId":"85","endLine":2,"endColumn":40},{"ruleId":"82","severity":1,"message":"86","line":2,"column":42,"nodeType":"84","messageId":"85","endLine":2,"endColumn":48},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"88","line":9,"column":33,"nodeType":"84","messageId":"85","endLine":9,"endColumn":40},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":18},{"ruleId":"82","severity":1,"message":"88","line":9,"column":33,"nodeType":"84","messageId":"85","endLine":9,"endColumn":40},{"ruleId":"82","severity":1,"message":"87","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":18},{"ruleId":"82","severity":1,"message":"93","line":1,"column":20,"nodeType":"84","messageId":"85","endLine":1,"endColumn":27},{"ruleId":"82","severity":1,"message":"94","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"95","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"82","severity":1,"message":"96","line":31,"column":9,"nodeType":"84","messageId":"85","endLine":31,"endColumn":13},{"ruleId":"82","severity":1,"message":"87","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":18},{"ruleId":"82","severity":1,"message":"93","line":1,"column":20,"nodeType":"84","messageId":"85","endLine":1,"endColumn":27},{"ruleId":"82","severity":1,"message":"94","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},{"ruleId":"82","severity":1,"message":"95","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"82","severity":1,"message":"96","line":31,"column":9,"nodeType":"84","messageId":"85","endLine":31,"endColumn":13},{"ruleId":"82","severity":1,"message":"97","line":3,"column":7,"nodeType":"84","messageId":"85","endLine":3,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":68,"column":6,"nodeType":"100","endLine":68,"endColumn":8,"suggestions":"101"},{"ruleId":"82","severity":1,"message":"102","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":40,"column":7,"nodeType":"105","endLine":40,"endColumn":51},{"ruleId":"82","severity":1,"message":"102","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},{"ruleId":"82","severity":1,"message":"106","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":41,"column":7,"nodeType":"105","endLine":41,"endColumn":51},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useState' is defined but never used.","'refetch' is assigned a value but never used.","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'useMemo' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'rows' is assigned a value but never used.","'MY_ISSUES' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterByDate' and 'setFilter'. Either include them or remove the dependency array.","ArrayExpression",["109"],"'format' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'CustomInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [filterByDate, setFilter]",{"range":"112","text":"113"},[1469,1471],"[filterByDate, setFilter]"]