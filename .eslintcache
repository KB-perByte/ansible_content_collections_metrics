[{"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js":"1","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js":"2","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js":"3","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js":"4","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueList.js":"5","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js":"6","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js":"7","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js":"8","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js":"9","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACPullRequests.js":"10","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRTable.js":"11","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRColumns.js":"12"},{"size":614,"mtime":1611329763642,"results":"13","hashOfConfig":"14"},{"size":1243,"mtime":1611383700704,"results":"15","hashOfConfig":"14"},{"size":363,"mtime":1611254299816,"results":"16","hashOfConfig":"14"},{"size":1729,"mtime":1611385044708,"results":"17","hashOfConfig":"14"},{"size":4450,"mtime":1611248508565,"results":"18","hashOfConfig":"14"},{"size":1753,"mtime":1611383997962,"results":"19","hashOfConfig":"14"},{"size":1320,"mtime":1611383543088,"results":"20","hashOfConfig":"14"},{"size":5225,"mtime":1611383809598,"results":"21","hashOfConfig":"14"},{"size":1310,"mtime":1611258996401,"results":"22","hashOfConfig":"14"},{"size":1763,"mtime":1611385148146,"results":"23","hashOfConfig":"14"},{"size":5205,"mtime":1611385200262,"results":"24","hashOfConfig":"14"},{"size":1655,"mtime":1611385613442,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3u8gy2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js",[],["54","55"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js",["56","57"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js",["58"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueList.js",["59","60","61","62"],"import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './IssueColumns';\n\n\nconst IssueList = ({ issues }) => {\n\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => issues, []);\n\n    const tableInstance = useTable({\n        columns,\n        data\n    });\n\n    const { \n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow\n    } = tableInstance;\n\n    const [count, setCount] = useState(issues.length);\n\n    return (\n        <div className=\"issue-list\">\n            <h2>Issues ({ count })</h2>\n\n            <table className=\"issue-table\" { ...getTableProps() }>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr { ...headerGroup.getHeaderGroupProps() }>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th { ...column.getHeaderProps() }>\n                                            {\n                                                column.render('Header')\n                                            }\n                                        </th>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </thead>\n                <tbody { ...getTableBodyProps() }>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row)\n                            return (\n                                <tr { ...row.getRowProps() }>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return (\n                                                <td { ...cell.getCellProps() }>\n                                                    {\n                                                        cell.render('Cell')\n                                                    }\n                                                </td>\n                                            )\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n                {/* <tfoot>\n                    {\n                        footerGroups.map((footerGroup) => (\n                            <tr { ...footerGroup.getFooterGroupProps() }>\n                                {\n                                    footerGroup.headers.map((column) => (\n                                        <td { ...column.getFooterProps() }>\n                                            {\n                                                column.render('Footer')\n                                            }\n                                        </td>   \n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </tfoot> */}\n            </table>\n        </div>\n\n    )\n\n    // return (\n    //     <div className=\"issue-list\">\n    //         <h2>Issues ({ count })</h2>\n    //         <table className=\"issue-table\">\n    //             <thead>\n    //                 <tr>\n    //                     <th>Created On</th>\n    //                     <th>Title</th>\n    //                     <th>Author</th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 { issues.map((issue) => (\n    //                     <tr key={ issue.node.id }>\n    //                         <td>\n    //                             { Date(issue.node.createdAt) }\n    //                         </td>\n    //                         <td>\n    //                             { <a href={ issue.node.url }>{ issue.node.title }</a> }\n    //                         </td>\n    //                         <td>\n    //                             { issue.node.author.login }\n    //                         </td>\n    //                     </tr>\n    //                 )) }\n    //             </tbody>\n    //         </table>\n    //     </div>\n    // );\n}\n \nexport default IssueList;",["63","64"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js",["65"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js",["66"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js",["67","68","69","70","71"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js",["72","73"],"import React from 'react';\nimport { Input, CustomInput } from 'reactstrap';\nimport { DatePicker, DateRangePicker } from 'rsuite';\n\nexport const Filter = ({ column }) => {\n  return (\n    <div style={{ marginTop: 5 }}>\n      {column.canFilter && column.render('Filter')}\n    </div>\n  );\n};\n\nexport const DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows: { length },\n  },\n}) => {\n  return (\n    <Input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n      placeholder={`search (${length}) ...`}\n    />\n  );\n};\n\nexport const SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) => {\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  return (\n    <CustomInput\n      id='custom-select'\n      type='select'\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=''>All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  );\n};\n","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACPullRequests.js",["74"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRTable.js",["75","76","77","78","79"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/PRColumns.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":35,"nodeType":"87","messageId":"88","endLine":2,"endColumn":40},{"ruleId":"85","severity":1,"message":"89","line":2,"column":42,"nodeType":"87","messageId":"88","endLine":2,"endColumn":48},{"ruleId":"85","severity":1,"message":"90","line":3,"column":7,"nodeType":"87","messageId":"88","endLine":3,"endColumn":16},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":10,"column":40,"nodeType":"94","endLine":10,"endColumn":42,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"96","line":21,"column":9,"nodeType":"87","messageId":"88","endLine":21,"endColumn":21},{"ruleId":"85","severity":1,"message":"97","line":26,"column":19,"nodeType":"87","messageId":"88","endLine":26,"endColumn":27},{"ruleId":"81","replacedBy":"98"},{"ruleId":"83","replacedBy":"99"},{"ruleId":"85","severity":1,"message":"100","line":10,"column":35,"nodeType":"87","messageId":"88","endLine":10,"endColumn":42},{"ruleId":"101","severity":1,"message":"102","line":34,"column":59,"nodeType":"103","endLine":34,"endColumn":103},{"ruleId":"85","severity":1,"message":"104","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":18},{"ruleId":"85","severity":1,"message":"105","line":1,"column":20,"nodeType":"87","messageId":"88","endLine":1,"endColumn":27},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"106","line":7,"column":10,"nodeType":"87","messageId":"88","endLine":7,"endColumn":16},{"ruleId":"85","severity":1,"message":"107","line":31,"column":9,"nodeType":"87","messageId":"88","endLine":31,"endColumn":13},{"ruleId":"85","severity":1,"message":"108","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":20},{"ruleId":"85","severity":1,"message":"109","line":3,"column":22,"nodeType":"87","messageId":"88","endLine":3,"endColumn":37},{"ruleId":"85","severity":1,"message":"100","line":10,"column":35,"nodeType":"87","messageId":"88","endLine":10,"endColumn":42},{"ruleId":"85","severity":1,"message":"104","line":1,"column":10,"nodeType":"87","messageId":"88","endLine":1,"endColumn":18},{"ruleId":"85","severity":1,"message":"105","line":1,"column":20,"nodeType":"87","messageId":"88","endLine":1,"endColumn":27},{"ruleId":"85","severity":1,"message":"91","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"106","line":7,"column":10,"nodeType":"87","messageId":"88","endLine":7,"endColumn":16},{"ruleId":"85","severity":1,"message":"107","line":31,"column":9,"nodeType":"87","messageId":"88","endLine":31,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":34,"column":59,"nodeType":"103","endLine":34,"endColumn":103},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'MY_ISSUES' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'issues'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'footerGroups' is assigned a value but never used.","'setCount' is assigned a value but never used.",["110"],["111"],"'refetch' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useState' is defined but never used.","'useMemo' is defined but never used.","'Button' is defined but never used.","'rows' is assigned a value but never used.","'DatePicker' is defined but never used.","'DateRangePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [issues]",{"range":"115","text":"116"},[292,294],"[issues]"]