[{"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js":"1","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js":"2","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js":"3","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js":"4","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueList.js":"5","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js":"6","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js":"7","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js":"8","/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js":"9"},{"size":604,"mtime":1611304004140,"results":"10","hashOfConfig":"11"},{"size":1129,"mtime":1611260115444,"results":"12","hashOfConfig":"11"},{"size":363,"mtime":1611254299816,"results":"13","hashOfConfig":"11"},{"size":1086,"mtime":1611305852512,"results":"14","hashOfConfig":"11"},{"size":4450,"mtime":1611248508565,"results":"15","hashOfConfig":"11"},{"size":1754,"mtime":1611305779971,"results":"16","hashOfConfig":"11"},{"size":1242,"mtime":1611296694885,"results":"17","hashOfConfig":"11"},{"size":3363,"mtime":1611305951997,"results":"18","hashOfConfig":"11"},{"size":1310,"mtime":1611258996401,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3u8gy2",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/index.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/App.js",["43","44","45"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport ACIssues from './components/ACIssues';\n\n\nfunction App() {  \n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <ACIssues />\n      </div>\n    </Router>\n  );\n}\n\n\n// function App() {\n\n//   const { loading, error, data } = useQuery(EXCHANGE_RATE);\n//   console.log(data);\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n\n//   return data.rates.map(({ currency, rate }) => (\n//     <div key={currency}>\n//       <p>\n//         {currency}: {rate}\n//       </p>\n//     </div>\n//   ));\n\n//   return (\n//       <div className=\"App\">\n//         <h2>My First Apollo App</h2>\n//         { loading && <h2>Loading...</h2>}\n//         { error && <h2>Whoops... Something went wrong</h2>}\n//         { data.rates.map((rate, id) => (\n//           <p id={ id }>{ rate.currency }</p>\n//         ))}\n//         {/* <p>{ data.rates }</p> */}\n//       </div>\n//   );\n// }\n\nexport default App;\n",["46","47"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/Navbar.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/queries/queries.js",["48"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueList.js",["49","50","51","52"],"import { useState, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './IssueColumns';\n\n\nconst IssueList = ({ issues }) => {\n\n    const columns = useMemo(() => COLUMNS, []);\n    const data = useMemo(() => issues, []);\n\n    const tableInstance = useTable({\n        columns,\n        data\n    });\n\n    const { \n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow\n    } = tableInstance;\n\n    const [count, setCount] = useState(issues.length);\n\n    return (\n        <div className=\"issue-list\">\n            <h2>Issues ({ count })</h2>\n\n            <table className=\"issue-table\" { ...getTableProps() }>\n                <thead>\n                    {\n                        headerGroups.map((headerGroup) => (\n                            <tr { ...headerGroup.getHeaderGroupProps() }>\n                                {\n                                    headerGroup.headers.map((column) => (\n                                        <th { ...column.getHeaderProps() }>\n                                            {\n                                                column.render('Header')\n                                            }\n                                        </th>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </thead>\n                <tbody { ...getTableBodyProps() }>\n                    {\n                        rows.map((row) => {\n                            prepareRow(row)\n                            return (\n                                <tr { ...row.getRowProps() }>\n                                    {\n                                        row.cells.map((cell) => {\n                                            return (\n                                                <td { ...cell.getCellProps() }>\n                                                    {\n                                                        cell.render('Cell')\n                                                    }\n                                                </td>\n                                            )\n                                        })\n                                    }\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n                {/* <tfoot>\n                    {\n                        footerGroups.map((footerGroup) => (\n                            <tr { ...footerGroup.getFooterGroupProps() }>\n                                {\n                                    footerGroup.headers.map((column) => (\n                                        <td { ...column.getFooterProps() }>\n                                            {\n                                                column.render('Footer')\n                                            }\n                                        </td>   \n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </tfoot> */}\n            </table>\n        </div>\n\n    )\n\n    // return (\n    //     <div className=\"issue-list\">\n    //         <h2>Issues ({ count })</h2>\n    //         <table className=\"issue-table\">\n    //             <thead>\n    //                 <tr>\n    //                     <th>Created On</th>\n    //                     <th>Title</th>\n    //                     <th>Author</th>\n    //                 </tr>\n    //             </thead>\n    //             <tbody>\n    //                 { issues.map((issue) => (\n    //                     <tr key={ issue.node.id }>\n    //                         <td>\n    //                             { Date(issue.node.createdAt) }\n    //                         </td>\n    //                         <td>\n    //                             { <a href={ issue.node.url }>{ issue.node.title }</a> }\n    //                         </td>\n    //                         <td>\n    //                             { issue.node.author.login }\n    //                         </td>\n    //                     </tr>\n    //                 )) }\n    //             </tbody>\n    //         </table>\n    //     </div>\n    // );\n}\n \nexport default IssueList;",["53","54"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/ACIssues.js",["55"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueColumns.js",[],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/IssueTable.js",["56","57","58","59"],"/home/prsahoo/Desktop/Networks_Metrics_Project/metrics_project_react/ansible-github-metrics/src/components/filters.js",["60","61"],"import React from 'react';\nimport { Input, CustomInput } from 'reactstrap';\nimport { DatePicker, DateRangePicker } from 'rsuite';\n\nexport const Filter = ({ column }) => {\n  return (\n    <div style={{ marginTop: 5 }}>\n      {column.canFilter && column.render('Filter')}\n    </div>\n  );\n};\n\nexport const DefaultColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows: { length },\n  },\n}) => {\n  return (\n    <Input\n      value={filterValue || ''}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n      placeholder={`search (${length}) ...`}\n    />\n  );\n};\n\nexport const SelectColumnFilter = ({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) => {\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach((row) => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  return (\n    <CustomInput\n      id='custom-select'\n      type='select'\n      value={filterValue}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined);\n      }}\n    >\n      <option value=''>All</option>\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </CustomInput>\n  );\n};\n",{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":18},{"ruleId":"62","severity":1,"message":"66","line":3,"column":35,"nodeType":"64","messageId":"65","endLine":3,"endColumn":40},{"ruleId":"62","severity":1,"message":"67","line":3,"column":42,"nodeType":"64","messageId":"65","endLine":3,"endColumn":48},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"62","severity":1,"message":"72","line":3,"column":7,"nodeType":"64","messageId":"65","endLine":3,"endColumn":16},{"ruleId":"62","severity":1,"message":"73","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":10,"column":40,"nodeType":"76","endLine":10,"endColumn":42,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"78","line":21,"column":9,"nodeType":"64","messageId":"65","endLine":21,"endColumn":21},{"ruleId":"62","severity":1,"message":"79","line":26,"column":19,"nodeType":"64","messageId":"65","endLine":26,"endColumn":27},{"ruleId":"68","replacedBy":"80"},{"ruleId":"70","replacedBy":"81"},{"ruleId":"62","severity":1,"message":"82","line":10,"column":35,"nodeType":"64","messageId":"65","endLine":10,"endColumn":42},{"ruleId":"62","severity":1,"message":"83","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":18},{"ruleId":"62","severity":1,"message":"84","line":1,"column":20,"nodeType":"64","messageId":"65","endLine":1,"endColumn":27},{"ruleId":"62","severity":1,"message":"73","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},{"ruleId":"62","severity":1,"message":"78","line":29,"column":9,"nodeType":"64","messageId":"65","endLine":29,"endColumn":21},{"ruleId":"62","severity":1,"message":"85","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":20},{"ruleId":"62","severity":1,"message":"86","line":3,"column":22,"nodeType":"64","messageId":"65","endLine":3,"endColumn":37},"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"'MY_ISSUES' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'issues'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'footerGroups' is assigned a value but never used.","'setCount' is assigned a value but never used.",["87"],["88"],"'refetch' is assigned a value but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'DatePicker' is defined but never used.","'DateRangePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [issues]",{"range":"92","text":"93"},[292,294],"[issues]"]